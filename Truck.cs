using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace PolymorphismTaskOOP
{
    class Truck : Vehicle
    {
        //1. class fields ...
        public double MaxLoadKg = 1000;
        //2. class properties ...
        //3. class methods ...
        //override method ...
        public virtual double CalculateRentalCost(int days, double maxKg)
        {
            //to check if Vehicle is older than 10 years ...
            if (IsOlderThan10Years())
            {
                //Console.WriteLine("This vehicle is older than 10 years, rental cost is not available.");
                //Additional.HoldScreen(); // Just to hold the screen for a second ...
                return -1; // Return -1 to tell the system that the vehicle is too old for rental ... 
            }

            //to check if the max load is more than the allowed limit ...
            if (maxKg > MaxLoadKg)
            {
                //Console.WriteLine("The load exceeds the maximum allowed limit.");
                //Additional.HoldScreen(); // Just to hold the screen for a second ...
                return -1; // Return -1 to indicate that the load is too heavy ...
            }

            //to set discounted rate for more than 7 days ...
            if (days > 7)
            {
                return days * 50 * 100; // Discounted rate for more than 7 days ...
            }
            else
            {
                return days * 70 * 100; // Regular rate for 7 days or less ...
            }
        }
        //4. class constructor ...
    }
}
